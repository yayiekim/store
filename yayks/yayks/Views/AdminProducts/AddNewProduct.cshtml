@model yayks.Models.NewProductModel

@{
    ViewBag.Title = "AddNewProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddNewProduct</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>NewProductModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            @Html.LabelFor(model => model.MeasurementId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MeasurementId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeasurementId, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.Genders.Count; i++)
        {
            <div class="form-group">

                <div class="col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.HiddenFor(model => model.Genders[i].Name)
                            @Html.CheckBoxFor(model => model.Genders[i].IsSelected, new { @checked = "checked" })
                        </label>
                    </div>

                </div>
            </div>
        }
 


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Products")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
